<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>JavaMail的简单应用</title>
    <url>/2020/06/19/Javamail%E7%9A%84%E7%AE%80%E5%8D%95%E5%BA%94%E7%94%A8/</url>
    <content><![CDATA[<h1 id="JavaMail-的简单实现"><a href="#JavaMail-的简单实现" class="headerlink" title="JavaMail 的简单实现"></a>JavaMail 的简单实现</h1><blockquote>
<p>采用servlet、jsp、mysql完成</p>
</blockquote>
<p>1.准备好javax.mail.jar ,activation.jar 放入WEB-INF下的lib文件夹中<br>2.编写注册页面与登录页面</p>
<p>注册页面</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;form method&#x3D;&quot;POST&quot; action&#x3D;&quot;http:&#x2F;&#x2F;localhost:8080&#x2F;registerDemo&#x2F;regist&quot;&gt; </span><br><span class="line">&lt;div &gt;</span><br><span class="line">	&lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;name&quot; 	laceholder&#x3D;&quot;用户名&quot; id&#x3D;&quot;name&quot;&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;div &gt;</span><br><span class="line">	&lt;input type&#x3D;&quot;password&quot; name&#x3D;&quot;password&quot; placeholder&#x3D;&quot;密码&quot; id&#x3D;&quot;password&quot;&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;div&gt;</span><br><span class="line">	&lt;input type&#x3D;&quot;text&quot; name&#x3D;“mail” placeholder&#x3D;“邮箱” id&#x3D;“email&gt;</span><br><span class="line">	&lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line">&lt;div &gt;</span><br><span class="line">	&lt;button type&#x3D;&quot;sumbit&quot; name&#x3D;&quot;regist&quot;&gt;注册&lt;&#x2F;button&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;form&gt;</span><br></pre></td></tr></table></figure>
<p>登录页面<br> <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&lt;form method&#x3D;&quot;POST&quot; action&#x3D;&quot;http:&#x2F;&#x2F;localhost:8080&#x2F;registerDemo&#x2F;login&quot;&gt;</span><br><span class="line"></span><br><span class="line">	&lt;input type&#x3D;&quot;email&quot; name&#x3D;&quot;mail&quot; id&#x3D;&quot;mail&quot; placeholder&#x3D;“邮箱”&#x2F;&gt;</span><br><span class="line"></span><br><span class="line">	&lt;input type&#x3D;&quot;password&quot; name&#x3D;&quot;password&quot; id&#x3D;&quot;password&quot; placeholder&#x3D;&quot;密码&quot;&#x2F;&gt;</span><br><span class="line">	</span><br><span class="line">	&lt;input type&#x3D;&quot;submit&quot; value&#x3D;&quot;登录&quot; &#x2F;&gt;</span><br><span class="line">	</span><br><span class="line">&lt;&#x2F;form&gt;</span><br></pre></td></tr></table></figure></p>
<p>2 RegistServlet</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;</span><br><span class="line">	request.setCharacterEncoding(&quot;utf-8&quot;);</span><br><span class="line">		String name &#x3D; request.getParameter(&quot;name&quot;);</span><br><span class="line">		String mail &#x3D; request.getParameter(&quot;mail&quot;);</span><br><span class="line">		String password &#x3D; request.getParameter(&quot;password&quot;);</span><br><span class="line">		UserBean user &#x3D; new UserBean();</span><br><span class="line">		user.setUsername(name);</span><br><span class="line">		user.setEmail(mail);</span><br><span class="line">		user.setPassword(password);</span><br><span class="line">		user.setState(0);</span><br><span class="line">		user.setActcode(UUID.randomUUID().toString());&#x2F;&#x2F; 生成唯一激活码</span><br><span class="line">		&#x2F;&#x2F; 把激活码存进session</span><br><span class="line">		HttpSession session &#x3D; request.getSession();</span><br><span class="line">		session.setAttribute(&quot;actcode&quot;, user.getActcode());</span><br><span class="line">		UserService userService &#x3D; new UserService();</span><br><span class="line">		try &#123;</span><br><span class="line">			if (userService.regist(user) &#x3D;&#x3D; 1) &#123;</span><br><span class="line">				request.setAttribute(&quot;msg&quot;, &quot;注册成功，请登录邮箱激活账号&quot;);</span><br><span class="line">			&#125; else &#123;</span><br><span class="line">				request.setAttribute(&quot;msg&quot;, &quot;注册失败，请检查相关信息&quot;);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125; catch (Exception e) &#123;</span><br><span class="line">			&#x2F;&#x2F; TODO 自动生成的 catch 块</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">		request.getRequestDispatcher(&quot;&#x2F;jsp&#x2F;result.jsp&quot;).forward(request, response);</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>

<p>3 LoginServlet<br> <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;</span><br><span class="line">		request.setCharacterEncoding(&quot;utf-8&quot;);</span><br><span class="line">		String mail &#x3D; request.getParameter(&quot;mail&quot;);</span><br><span class="line">		String password &#x3D; request.getParameter(&quot;password&quot;);</span><br><span class="line">		UserBean user &#x3D; new UserBean();</span><br><span class="line">		user.setEmail(mail);</span><br><span class="line">		user.setPassword(password);</span><br><span class="line">		user.setState(0);</span><br><span class="line">		user.setActcode(UUID.randomUUID().toString());&#x2F;&#x2F; 生成唯一激活码</span><br><span class="line">		&#x2F;&#x2F; 把激活码存进session</span><br><span class="line">		HttpSession session &#x3D; request.getSession();</span><br><span class="line">		session.setAttribute(&quot;actcode&quot;, user.getActcode());</span><br><span class="line">		UserService userService &#x3D; new UserService();</span><br><span class="line">		try &#123;</span><br><span class="line">			if (userService.login(user) &#x3D;&#x3D; 1) &#123;</span><br><span class="line">				request.setAttribute(&quot;msg&quot;, &quot;登录成功！&quot;);</span><br><span class="line">			&#125; else &#123;</span><br><span class="line">				request.setAttribute(&quot;msg&quot;, &quot;登陆失败！&quot;);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125; catch (Exception e) &#123;</span><br><span class="line">			&#x2F;&#x2F; TODO 自动生成的 catch 块</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">		request.getRequestDispatcher(&quot;&#x2F;jsp&#x2F;result.jsp&quot;).forward(request, response);</span><br><span class="line"></span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure></p>
<p>4 ActiveServlet<br> <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;&#96;</span><br><span class="line">	request.setCharacterEncoding(&quot;utf-8&quot;);</span><br><span class="line">		String actcode &#x3D; request.getParameter(&quot;actcode&quot;); &#x2F;&#x2F; 获取注册激活码</span><br><span class="line">		HttpSession session &#x3D; request.getSession(); &#x2F;&#x2F; 获取存入session的激活码</span><br><span class="line">		String sessionActcode &#x3D; session.getAttribute(&quot;actcode&quot;).toString();</span><br><span class="line">		if (actcode.equals(sessionActcode)) &#123; &#x2F;&#x2F; 激活码匹配</span><br><span class="line">			UserService user &#x3D; new UserService();</span><br><span class="line">			int result;</span><br><span class="line">			try &#123;</span><br><span class="line">				result &#x3D; user.active(actcode);</span><br><span class="line">				if(result &#x3D;&#x3D; 1)&#123;</span><br><span class="line">					request.getRequestDispatcher(&quot;&#x2F;jsp&#x2F;login.jsp&quot;).forward(request, response);</span><br><span class="line">				&#125;else&#123;</span><br><span class="line">					request.setAttribute(&quot;msg&quot;, &quot;激活失败！&quot;);</span><br><span class="line">					request.getRequestDispatcher(&quot;&#x2F;jsp&#x2F;result.jsp&quot;).forward(request, response);</span><br><span class="line">				&#125;</span><br><span class="line">			&#125; catch (Exception e) &#123;</span><br><span class="line">				&#x2F;&#x2F; TODO 自动生成的 catch 块</span><br><span class="line">				e.printStackTrace();</span><br><span class="line">			&#125;&#x2F;&#x2F;激活账号</span><br><span class="line">		</span><br><span class="line">		&#125; else &#123;</span><br><span class="line">			request.setAttribute(&quot;msg&quot;, &quot;激活码不匹配，激活失败！&quot;);</span><br><span class="line">			request.getRequestDispatcher(&quot;&#x2F;jsp&#x2F;result.jsp&quot;).forward(request, response);</span><br><span class="line"> </span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure></p>
<p>5 MailUtil 发送邮件工具类<br> <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&#x2F;** </span><br><span class="line">* @author 作者  Basil: </span><br><span class="line">* @version 1.0</span><br><span class="line">* @创建时间 2020年6月18日 下午4:49:43 </span><br><span class="line">*&#x2F;</span><br><span class="line">public class MailUtil &#123;</span><br><span class="line"></span><br><span class="line">	&#x2F;**</span><br><span class="line">	 * 发送邮件的方法： 发送一封激活邮件</span><br><span class="line">	 * @param mail 收件人邮箱</span><br><span class="line">	 * @param actcode  收件人激活码</span><br><span class="line">	 *&#x2F;</span><br><span class="line">	public static void sendMail(String email, String actcode) throws IOException &#123;</span><br><span class="line">		&#x2F;&#x2F;创建session对象</span><br><span class="line">		&#x2F;&#x2F;创建 邮件对象</span><br><span class="line">	</span><br><span class="line">		String from &#x3D; &quot;&quot;;&#x2F;&#x2F; 发件人电子邮箱</span><br><span class="line">		String host &#x3D;&quot;smtp.qq.com&quot;;</span><br><span class="line">		final String authorizationCode &#x3D; &quot;&quot;; &#x2F;&#x2F;授权码</span><br><span class="line">		Properties properties &#x3D; System.getProperties();&#x2F;&#x2F; 获取系统属性</span><br><span class="line">		properties.setProperty(&quot;mail.smtp.host&quot;, host);&#x2F;&#x2F; 设置邮件服务器</span><br><span class="line">		properties.setProperty(&quot;mail.smtp.auth&quot;, &quot;true&quot;);&#x2F;&#x2F; 打开认证</span><br><span class="line"></span><br><span class="line">		</span><br><span class="line">		 </span><br><span class="line">		try &#123;</span><br><span class="line">			MailSSLSocketFactory sf &#x3D; new MailSSLSocketFactory();</span><br><span class="line">			sf.setTrustAllHosts(true);</span><br><span class="line">			properties.put(&quot;mail.smtp.ssl.enable&quot;, &quot;true&quot;);</span><br><span class="line">			properties.put(&quot;mail.smtp.ssl.socketFactory&quot;, sf);</span><br><span class="line">			</span><br><span class="line">			&#x2F;&#x2F; 1.获取默认session对象</span><br><span class="line">			Session session &#x3D; Session.getDefaultInstance(properties, new Authenticator() &#123;</span><br><span class="line">				public PasswordAuthentication getPasswordAuthentication() &#123;</span><br><span class="line">				return new PasswordAuthentication(“”,authorizationCode); &#x2F;&#x2F; 发件人邮箱账号、授权码</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;);</span><br><span class="line">			</span><br><span class="line">			&#x2F;&#x2F; 2.创建邮件对象</span><br><span class="line">			Message message &#x3D; new MimeMessage(session);</span><br><span class="line">			&#x2F;&#x2F; 2.1设置发件人</span><br><span class="line">			message.setFrom(new InternetAddress(from));</span><br><span class="line">			&#x2F;&#x2F; 2.2设置接收人</span><br><span class="line">			message.addRecipient(Message.RecipientType.TO, new InternetAddress(email));</span><br><span class="line">			&#x2F;&#x2F; 2.3设置邮件主题</span><br><span class="line">			message.setSubject(&quot;账号激活&quot;);</span><br><span class="line">&#x2F;&#x2F;</span><br><span class="line">			String content &#x3D; &quot;&lt;html&gt;&lt;head&gt;&lt;&#x2F;head&gt;&lt;body&gt;&lt;h1&gt;请点击以下链接激活注册账号&lt;&#x2F;h1&gt;&lt;h3&gt;&lt;a href&#x3D;&#39;http:&#x2F;&#x2F;localhost:8080&#x2F;RegisterDemo&#x2F;ActiveServlet?code&#x3D;&quot;</span><br><span class="line">					+ actcode + &quot;&#39;&gt;http:&#x2F;&#x2F;localhost:8080&#x2F;registerDemo&#x2F;active?actcode&#x3D;&quot; + actcode</span><br><span class="line">					+ &quot;&lt;&#x2F;href&gt;&lt;&#x2F;h3&gt;&lt;&#x2F;body&gt;&lt;&#x2F;html&gt;&quot;;</span><br><span class="line">			message.setContent(content, &quot;text&#x2F;html;charset&#x3D;UTF-8&quot;);</span><br><span class="line">			&#x2F;&#x2F; 3.发送邮件</span><br><span class="line">			Transport.send(message);</span><br><span class="line">			System.out.println(&quot;激活邮件成功发送!&quot;);</span><br><span class="line"></span><br><span class="line">		&#125; catch (Exception e) &#123;</span><br><span class="line">			&#x2F;&#x2F; TODO 自动生成的 catch 块</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line"></span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>6 UserService 服务层<br> <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public class UserService &#123;</span><br><span class="line"></span><br><span class="line">	&#x2F;&#x2F;注册</span><br><span class="line">	public int regist(UserBean user) throws Exception &#123;</span><br><span class="line">		</span><br><span class="line">		UserDao userDao &#x3D; new UserDaoimpl();</span><br><span class="line">		int result &#x3D; userDao.regist(user);</span><br><span class="line">		if(result &#x3D;&#x3D; 1) &#123;	&#x2F;&#x2F;注册成功，发送一封激活邮件</span><br><span class="line">			MailUtil.sendMail(user.getEmail(), user.getActcode());</span><br><span class="line">		&#125;</span><br><span class="line">		return result;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	&#x2F;&#x2F;激活</span><br><span class="line">	public int active(String actcode) throws Exception &#123;</span><br><span class="line">		UserDao userDao &#x3D; new UserDaoimpl();</span><br><span class="line">		int result &#x3D; userDao.active(actcode);</span><br><span class="line">		return result;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	&#x2F;&#x2F;登录</span><br><span class="line">	public int login(UserBean user) throws Exception &#123;</span><br><span class="line">		UserDao userDao &#x3D; new UserDaoimpl();</span><br><span class="line">		int result &#x3D; userDao.login(user);</span><br><span class="line">		if(result &#x3D;&#x3D; 1)&#123;</span><br><span class="line">			return 1;				&#x2F;&#x2F;返回已则说明已经激活过</span><br><span class="line">		&#125; else &#123;</span><br><span class="line">			MailUtil.sendMail(user.getEmail(), user.getActcode());&#x2F;&#x2F;为激活则发送邮件</span><br><span class="line">		&#125;</span><br><span class="line">		return result;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>7 UserDaoimpl实现类<br> <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">	public class UserDaoimpl implements UserDao&#123;</span><br><span class="line"></span><br><span class="line">	</span><br><span class="line">	public Connection conn &#x3D; null;</span><br><span class="line">	public String sql &#x3D; null;</span><br><span class="line">	public PreparedStatement pstmt &#x3D; null;</span><br><span class="line">	public Statement stmt &#x3D; null;</span><br><span class="line">	ResultSet rs &#x3D; null;</span><br><span class="line">	</span><br><span class="line">	@Override</span><br><span class="line">	public int regist(UserBean user) throws Exception &#123;</span><br><span class="line">		int result &#x3D; 0;</span><br><span class="line">		conn &#x3D; getConnection();</span><br><span class="line">		sql &#x3D; &quot;insert into user(username,password,email,state,actcode) values(?,?,?,?,?)&quot;;</span><br><span class="line">		pstmt &#x3D; conn.prepareStatement(sql);</span><br><span class="line">		pstmt.setString(1, user.getUsername());</span><br><span class="line">		pstmt.setString(2, user.getPassword());</span><br><span class="line">		pstmt.setString(3, user.getEmail());</span><br><span class="line">		pstmt.setInt(4, user.getState());</span><br><span class="line">		pstmt.setString(5, user.getActcode());</span><br><span class="line">		result &#x3D; pstmt.executeUpdate();</span><br><span class="line"></span><br><span class="line">		return result;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	@Override</span><br><span class="line">	public int active(String actcode) throws Exception &#123;</span><br><span class="line">		int result &#x3D; 0;</span><br><span class="line">		conn &#x3D; getConnection();</span><br><span class="line">		sql &#x3D; &quot;update user set state&#x3D; 1 where actcode&#x3D;?&quot;;</span><br><span class="line">		pstmt &#x3D; conn.prepareStatement(sql);</span><br><span class="line">		pstmt.setString(1, actcode);</span><br><span class="line">		result &#x3D; pstmt.executeUpdate();</span><br><span class="line">		return result;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	@Override</span><br><span class="line">	public int login(UserBean user) throws Exception &#123;</span><br><span class="line">		int result &#x3D; 0;</span><br><span class="line">		conn &#x3D; getConnection();</span><br><span class="line">		sql &#x3D; &quot;select * from user where state &#x3D; 1 and email &#x3D; ? and password &#x3D; ?&quot;;</span><br><span class="line">		pstmt &#x3D; conn.prepareStatement(sql);</span><br><span class="line">		pstmt.setString(1, user.getEmail());</span><br><span class="line">		pstmt.setString(2, user.getPassword());</span><br><span class="line">		if(pstmt.executeQuery().next()) &#123;</span><br><span class="line">			result ++;</span><br><span class="line">		&#125;</span><br><span class="line">		return result;	</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>所有类都完毕后，运行Tomcat ，访问注册页面,输入所有信息提交后，会自动发送一封激活邮件。</p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gfxqiphpe9j30rs0lsabp.jpg" alt="访问注册页面"></p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gfxqly1wzqj31j00fgjtp.jpg" alt="邮箱激活"></p>
<p>激活成功后会跳转值登录页面登录即可。</p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>JavaWeb</tag>
        <tag>Login</tag>
        <tag>register</tag>
      </tags>
  </entry>
  <entry>
    <title>Mac软件无法打开或已损坏情况</title>
    <url>/2020/05/23/Mac%E8%BD%AF%E4%BB%B6%E6%97%A0%E6%B3%95%E6%89%93%E5%BC%80%E6%88%96%E5%B7%B2%E6%8D%9F%E5%9D%8F%E6%83%85%E5%86%B5/</url>
    <content><![CDATA[<h1 id="关于Mac软件无法启动的解决办法"><a href="#关于Mac软件无法启动的解决办法" class="headerlink" title="关于Mac软件无法启动的解决办法"></a>关于Mac软件无法启动的解决办法</h1><p>出现已损坏无法打开解决办法：</p>
<a id="more"></a>
<ul>
<li><p>请在系统偏好设置-安全性与隐私-选择【任何来源】，即可使用。<br>若无该选项：<br><em>运行终端，输入以下命令，回车输入密码</em> </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo spctl --master-disable</span><br></pre></td></tr></table></figure>

<p><em>打开安全性与隐私，任何来源已显示</em></p>
</li>
</ul>
<hr>
<ul>
<li>若运行软件显示“打不开或者显示应用已损坏的情况”</li>
<li>运行终端，输入以下命令，回车输入密码即可*</li>
</ul>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo xattr -d com.apple.quarantine &#x2F;Applications&#x2F;xxxx.app</span><br></pre></td></tr></table></figure>
<p>其中 <del>xxxx.app</del> 指该应用的具体名称</p>
<hr>
]]></content>
      <categories>
        <category>MacOS</category>
      </categories>
      <tags>
        <tag>MacOs</tag>
      </tags>
  </entry>
  <entry>
    <title>重装windows系统</title>
    <url>/2020/05/23/%E9%87%8D%E8%A3%85windows%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<h1 id="电脑重装系统"><a href="#电脑重装系统" class="headerlink" title="电脑重装系统"></a>电脑重装系统</h1><blockquote>
<p>献给我部门的师弟师妹们。</p>
</blockquote>
<a id="more"></a>
<h1 id="第一步：制作优盘启动"><a href="#第一步：制作优盘启动" class="headerlink" title="第一步：制作优盘启动"></a>第一步：制作优盘启动</h1><ul>
<li>准备好一个8GB的优盘，请事先备份好数据，因为制作优盘启动器会格式化优盘</li>
</ul>
<ul>
<li><p>下载制作优盘工具，这里我以<a href="http://www.wepe.com.cn/download.html" target="_blank" rel="noopener">微PE工具箱</a>为例。</p>
<ul>
<li><p>下载安装完毕后打开，并插入优盘。如图所示，选择安装至优盘&gt;默认安装就行<img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gf2myd41xfj30v30jlmyn.jpg" alt="微PE"> </p>
</li>
<li><p>在安装的同时，我们可以去下载windows镜像文件。推荐去，<a href="https://msdn.itellyou.cn/" target="_blank" rel="noopener">MSDN</a>下载。如图所示：<img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gf2mz3gibnj31c00u04qp.jpg" alt="MSDN"><br>我们选择【操作系统】&gt;【windows10,1903版本】&gt;【consumer editions】 这里我们选择consumer_editions版本，两个版本其实<a href="https://blog.csdn.net/qq_36707431/article/details/104787417" target="_blank" rel="noopener">区别不大</a>。</p>
<ul>
<li>下载完毕后，我们来打开电脑，发现会多了两个分区，其中一个为【EFI】分区，我们不管它。找另一个分区，在里面新建文件夹取名为”windows10”，将刚下载好的windows10 1903镜像拷贝到该路径。这样一个优盘启动工具制作完成。</li>
</ul>
</li>
</ul>
</li>
</ul>
<hr>
<h1 id="第二步：设置优盘启动"><a href="#第二步：设置优盘启动" class="headerlink" title="第二步：设置优盘启动"></a>第二步：设置优盘启动</h1><ul>
<li>以宏碁电脑为例，关机状态下插入优盘，开机并按【F2】进入<a href="https://www.jianshu.com/p/95c9d5dc8443" target="_blank" rel="noopener">BIOS系统</a>，方向键移动到【Boot】选项，将硬盘启动顺序为优盘启动。按【F10】保存并退出。重启后就进入微PE系统了。</li>
</ul>
<hr>
<h1 id="第三步：安装系统"><a href="#第三步：安装系统" class="headerlink" title="第三步：安装系统"></a>第三步：安装系统</h1><ul>
<li>进入系统后，打开【此电脑】&gt;【优盘启动器】&gt;【windows10】&gt;【双击镜像文件】&gt;【setup.exe】</li>
<li>打开【setup.exe】后，按提示进入安装程序。选择【windows10专业版】&gt; 【自定义安装】&gt;【系统盘】&gt;【格式化】&gt;【下一步】&gt;【走安装进度】&gt;【安装完成】</li>
<li>漫长的安装指引。</li>
</ul>
<hr>
<h1 id="第四步：激活系统"><a href="#第四步：激活系统" class="headerlink" title="第四步：激活系统"></a>第四步：激活系统</h1><ul>
<li>用数字激活软件，联网激活。</li>
</ul>
]]></content>
      <categories>
        <category>win</category>
      </categories>
      <tags>
        <tag>system</tag>
        <tag>win</tag>
        <tag>优盘启动</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaServlet登录与注册功能</title>
    <url>/2020/06/13/JavaServlet%E7%99%BB%E5%BD%95%E4%B8%8E%E6%B3%A8%E5%86%8C%E5%8A%9F%E8%83%BD/</url>
    <content><![CDATA[<h1 id="JavaServlet-实现登录与注册功能"><a href="#JavaServlet-实现登录与注册功能" class="headerlink" title="JavaServlet 实现登录与注册功能"></a>JavaServlet 实现登录与注册功能</h1><blockquote>
<p>采用servlet、jsp、mysql完成</p>
</blockquote>
<a id="more"></a>





<h1 id="先来看看实现效果："><a href="#先来看看实现效果：" class="headerlink" title="先来看看实现效果："></a>先来看看实现效果：</h1><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gfqlskxb4tj31c00u0nlm.jpg" alt="用户注册"></p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gfqlsrsxf0j31c00u0ayo.jpg" alt="注册失败"></p>
<h1 id="LoginServlet-java"><a href="#LoginServlet-java" class="headerlink" title="LoginServlet.java"></a>LoginServlet.java</h1> <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * LoginServlet:处理登录流程</span><br><span class="line"> * @author mac</span><br><span class="line"> *</span><br><span class="line"> *&#x2F;</span><br><span class="line"></span><br><span class="line">public class LoginServlet extends HttpServlet &#123;</span><br><span class="line">	private static final long serialVersionUID &#x3D; 1L;</span><br><span class="line">	</span><br><span class="line">	UserDaoImplement user &#x3D; new UserDaoImplement();</span><br><span class="line">	&#x2F;**</span><br><span class="line">	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)</span><br><span class="line">	 *&#x2F;</span><br><span class="line">	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;&#125;</span><br><span class="line"></span><br><span class="line">	&#x2F;**</span><br><span class="line">	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)</span><br><span class="line">	 *&#x2F;</span><br><span class="line">	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;</span><br><span class="line">		response.setContentType(&quot;text&#x2F;html; charset&#x3D;UTF-8&quot;);</span><br><span class="line">		PrintWriter out &#x3D; response.getWriter();</span><br><span class="line">		UserBean userbean &#x3D; null;</span><br><span class="line">		&#x2F;**</span><br><span class="line">		 * 获取用户输入的用户名，密码，验证码，及session域中的piccode值</span><br><span class="line">		 *&#x2F;</span><br><span class="line">		HttpSession session &#x3D; request.getSession();</span><br><span class="line">		String username &#x3D; request.getParameter(&quot;username&quot;);</span><br><span class="line">		String password &#x3D; request.getParameter(&quot;password&quot;);</span><br><span class="line">		String checkCode &#x3D; request.getParameter(&quot;checkCode&quot;);</span><br><span class="line">		String piccode &#x3D; (String)session.getAttribute(&quot;piccode&quot;);</span><br><span class="line">		password &#x3D; DigestUtil.md5Hex(password);		&#x2F;&#x2F;md5加密</span><br><span class="line">		&#x2F;&#x2F;判断验证码是否正确</span><br><span class="line">		boolean b &#x3D; CheckCode(piccode,checkCode);</span><br><span class="line">		</span><br><span class="line">		&#x2F;&#x2F;验证登录</span><br><span class="line">		try &#123;</span><br><span class="line">			boolean cl &#x3D; user.Login(username, password, b);</span><br><span class="line">			if(cl) &#123;</span><br><span class="line">				userbean &#x3D; new UserBean(username, password);</span><br><span class="line">				session.setAttribute(&quot;userbean&quot;, userbean);&#x2F;&#x2F;将对象保留在session中，便于后续的使用</span><br><span class="line">&#x2F;&#x2F;				out.print(&quot;&lt;script language&#x3D;&#39;javascript&#39;&gt;alert(&#39;登录成功！&#39;);&lt;&#x2F;script&gt;&quot;);</span><br><span class="line">				request.getRequestDispatcher(&quot;jsp&#x2F;index.jsp&quot;).forward(request, response);</span><br><span class="line">				</span><br><span class="line">			&#125; else &#123;</span><br><span class="line">				out.print(&quot;&lt;script language&#x3D;&#39;javascript&#39;&gt;alert(&#39;用户名或密码有误！&#39;);window.location.href&#x3D;&#39;jsp&#x2F;login.jsp&#39;&lt;&#x2F;script&gt;&quot;);</span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line">		&#125; catch (Exception e) &#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">		out.flush();&#x2F;&#x2F;将流刷新</span><br><span class="line">        out.close();&#x2F;&#x2F;将流关闭</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	&#x2F;**</span><br><span class="line">	 * 验证码的判断</span><br><span class="line">	 * piccode ： 为ImageServlet存入session域中的值</span><br><span class="line">	 * checkCode ： 为用户输入的值</span><br><span class="line">	 * @param piccode</span><br><span class="line">	 * @param checkCode</span><br><span class="line">	 * @return</span><br><span class="line">	 *&#x2F;</span><br><span class="line">	</span><br><span class="line">	public static boolean CheckCode(String piccode, String checkCode) &#123;</span><br><span class="line">		checkCode &#x3D; checkCode.toUpperCase();  &#x2F;&#x2F;将输入的验证码全部转为大写</span><br><span class="line">		</span><br><span class="line">		if(piccode.equals(checkCode)) &#123;</span><br><span class="line">			return true;    &#x2F;&#x2F;输入的验证码与随机生成的验证码一直</span><br><span class="line">		&#125; else &#123;</span><br><span class="line">			return false;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="RegisterServlet-java"><a href="#RegisterServlet-java" class="headerlink" title="RegisterServlet.java"></a>RegisterServlet.java</h1> <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * Servlet implementation class RegisterServlet</span><br><span class="line"> *&#x2F;</span><br><span class="line">public class RegisterServlet extends HttpServlet &#123;</span><br><span class="line">	private static final long serialVersionUID &#x3D; 1L;</span><br><span class="line">	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;&#125;</span><br><span class="line"></span><br><span class="line">	&#x2F;**</span><br><span class="line">	 * 接受前端返回的数据</span><br><span class="line">	 *&#x2F;</span><br><span class="line">	</span><br><span class="line">	UserDaoImplement user &#x3D; new UserDaoImplement();</span><br><span class="line">	</span><br><span class="line">	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;</span><br><span class="line">		response.setContentType(&quot;text&#x2F;html; charset&#x3D;UTF-8&quot;);</span><br><span class="line">		PrintWriter out &#x3D; response.getWriter();</span><br><span class="line">		HttpSession session &#x3D; request.getSession();</span><br><span class="line">		String username &#x3D; request.getParameter(&quot;username&quot;);</span><br><span class="line">		String password &#x3D; request.getParameter(&quot;password&quot;);</span><br><span class="line">		String checkCode &#x3D; request.getParameter(&quot;checkCode&quot;);</span><br><span class="line">		String piccode &#x3D; (String)session.getAttribute(&quot;piccode&quot;);</span><br><span class="line">		password &#x3D; DigestUtil.md5Hex(password);	&#x2F;&#x2F;md5加密</span><br><span class="line">		&#x2F;&#x2F;判断验证码是否正确</span><br><span class="line">		boolean b &#x3D; CheckCode(piccode,checkCode);</span><br><span class="line">		if( username &#x3D;&#x3D; null  || password &#x3D;&#x3D; null || &quot;&quot;.equals(username) || &quot;&quot;.equals(password)) &#123;	</span><br><span class="line">			out.print(&quot;&lt;script language&#x3D;&#39;javascript&#39;&gt;alert(&#39;请输入用户名和密码！&#39;);window.location.href&#x3D;&#39;jsp&#x2F;register.jsp&#39;&lt;&#x2F;script&gt;&quot;);</span><br><span class="line">			</span><br><span class="line">		&#125;	else &#123;</span><br><span class="line">			try &#123;</span><br><span class="line">				boolean ir &#x3D; user.Resgister(username, password,b);	&#x2F;&#x2F;成功返回true</span><br><span class="line">				if(ir) &#123;</span><br><span class="line">					</span><br><span class="line">					out.print(&quot;&lt;script language&#x3D;&#39;javascript&#39;&gt;alert(&#39;注册成功！&#39;);window.location.href&#x3D;&#39;jsp&#x2F;login.jsp&#39;&lt;&#x2F;script&gt;&quot;);</span><br><span class="line">				&#125; else &#123;</span><br><span class="line">					out.print(&quot;&lt;script language&#x3D;&#39;javascript&#39;&gt;alert(&#39;用户名被占用！&#39;);window.location.href&#x3D;&#39;jsp&#x2F;register.jsp&#39;&lt;&#x2F;script&gt;&quot;);</span><br><span class="line">				&#125;</span><br><span class="line">				</span><br><span class="line">			&#125; catch (Exception e) &#123;</span><br><span class="line">				</span><br><span class="line">				e.printStackTrace();</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		out.flush();&#x2F;&#x2F;将流刷新</span><br><span class="line">        out.close();&#x2F;&#x2F;将流关闭</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line"></span><br><span class="line">	&#x2F;**</span><br><span class="line">	 * 验证码的判断</span><br><span class="line">	 * piccode ： 为ImageServlet存入session域中的值</span><br><span class="line">	 * checkCode ： 为用户输入的值</span><br><span class="line">	 * @param piccode</span><br><span class="line">	 * @param checkCode</span><br><span class="line">	 * @return</span><br><span class="line">	 *&#x2F;</span><br><span class="line">	</span><br><span class="line">	public static boolean CheckCode(String piccode, String checkCode) &#123;</span><br><span class="line">		checkCode &#x3D; checkCode.toUpperCase();  &#x2F;&#x2F;将输入的验证码全部转为大写</span><br><span class="line">		</span><br><span class="line">		if(piccode.equals(checkCode)) &#123;</span><br><span class="line">			return true;    &#x2F;&#x2F;输入的验证码与随机生成的验证码一直</span><br><span class="line">		&#125; else &#123;</span><br><span class="line">			return false;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="Dao-类"><a href="#Dao-类" class="headerlink" title="Dao 类"></a>Dao 类</h1> <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">public interface Dao &#123;</span><br><span class="line">	</span><br><span class="line">	&#x2F;**</span><br><span class="line">	 * 获取数据源</span><br><span class="line">	 * @return ds</span><br><span class="line">	 *&#x2F;</span><br><span class="line">	public static DataSource getDataSource() &#123;</span><br><span class="line">		DataSource ds &#x3D; null;</span><br><span class="line">		try &#123;</span><br><span class="line">			Context context &#x3D; new InitialContext();</span><br><span class="line">			ds &#x3D; (DataSource) context.lookup(&quot;java:comp&#x2F;env&#x2F;jdbc&#x2F;datasource&quot;);</span><br><span class="line">			</span><br><span class="line">		&#125; catch (Exception e) &#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125; </span><br><span class="line">		return ds;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	</span><br><span class="line">	&#x2F;**</span><br><span class="line">	 * 获取数据库连接</span><br><span class="line">	 * @return conn</span><br><span class="line">	 *&#x2F;</span><br><span class="line">	public default Connection getConnection() &#123;</span><br><span class="line">		DataSource ds &#x3D; getDataSource();</span><br><span class="line">		Connection conn &#x3D; null;</span><br><span class="line">		try &#123;</span><br><span class="line">			conn &#x3D; ds.getConnection();</span><br><span class="line">		&#125; catch (Exception e) &#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">		return conn;</span><br><span class="line">	&#125;	</span><br><span class="line">	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="userDao"><a href="#userDao" class="headerlink" title="userDao"></a>userDao</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * 用户dao功能接口定义</span><br><span class="line"> * @author mac</span><br><span class="line"> *</span><br><span class="line"> *&#x2F;</span><br><span class="line">public interface UserDao extends Dao &#123;</span><br><span class="line">	&#x2F;&#x2F;判断数据是否含已有username</span><br><span class="line">	public boolean IsResgister(String username) throws Exception;</span><br><span class="line">	&#x2F;&#x2F;注册功能接口</span><br><span class="line">	public boolean Resgister(String username ,String password,boolean b) throws Exception;	</span><br><span class="line">	&#x2F;&#x2F;登录功能接口</span><br><span class="line">	public boolean Login(String username ,String password,boolean b) throws Exception;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="用户dao实现类"><a href="#用户dao实现类" class="headerlink" title="用户dao实现类"></a>用户dao实现类</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * 用户dao实现类</span><br><span class="line"> * @author mac</span><br><span class="line"> *</span><br><span class="line"> *&#x2F;</span><br><span class="line">public class UserDaoImplement implements UserDao&#123;	</span><br><span class="line">	</span><br><span class="line">	public Connection conn &#x3D; null;</span><br><span class="line">	public String sql &#x3D; null;</span><br><span class="line">	public PreparedStatement pstmt &#x3D; null;</span><br><span class="line">	public Statement stmt &#x3D; null;</span><br><span class="line">	ResultSet rs &#x3D; null;</span><br><span class="line">	</span><br><span class="line">	&#x2F;**</span><br><span class="line">	 * 实现注册功能</span><br><span class="line">	 * 成功返回 true</span><br><span class="line">	 * 失败返回 false</span><br><span class="line">	 *&#x2F;</span><br><span class="line">	@Override</span><br><span class="line">	public boolean Resgister(String username, String password,boolean b) throws Exception &#123;</span><br><span class="line">		if(b) &#123;</span><br><span class="line">			conn &#x3D; getConnection();</span><br><span class="line">			&#x2F;&#x2F;先判断数据库是否是存在要注册的用户名</span><br><span class="line">			boolean is &#x3D; IsResgister(username);</span><br><span class="line">			if(!is) &#123;</span><br><span class="line">				sql&#x3D;&quot;insert into user(username, password)values (?, ?)&quot;;  </span><br><span class="line">				pstmt&#x3D; conn.prepareStatement(sql);</span><br><span class="line">				pstmt.setString(1, username);</span><br><span class="line">				pstmt.setString(2, password);</span><br><span class="line">				if(pstmt.executeUpdate()&gt;&#x3D;1) &#123;			&#x2F;&#x2F;返回大于1 证明插入成功</span><br><span class="line">					return true;</span><br><span class="line">				&#125; else &#123;</span><br><span class="line">					return false;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125; else &#123;</span><br><span class="line">				return false;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		return false;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	&#x2F;**</span><br><span class="line">	 * 判断数据库中 是否包含传入的 username</span><br><span class="line">	 *&#x2F;</span><br><span class="line">	@Override</span><br><span class="line">	public boolean IsResgister(String username) throws Exception &#123;</span><br><span class="line">		conn &#x3D; getConnection();</span><br><span class="line">		sql &#x3D; &quot;select * from user where username &#x3D;?&quot;;</span><br><span class="line">		pstmt &#x3D; conn.prepareCall(sql);</span><br><span class="line">		pstmt.setString(1,username);</span><br><span class="line">		rs &#x3D; pstmt.executeQuery();</span><br><span class="line">		if(rs.next()) &#123;					&#x2F;&#x2F; 返回true 则证明数据库已存在记录</span><br><span class="line">			return true;</span><br><span class="line">		&#125; else &#123;</span><br><span class="line">			return false;</span><br><span class="line">		&#125;</span><br><span class="line">	</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	&#x2F;**</span><br><span class="line">	 * 实现登录功能</span><br><span class="line">	 * username:用户名</span><br><span class="line">	 * password:密码</span><br><span class="line">	 * b  :验证码的正确性</span><br><span class="line">	 * 成功返回 true</span><br><span class="line">	 * 失败返回 false</span><br><span class="line">	 *&#x2F;</span><br><span class="line">	</span><br><span class="line">	@Override</span><br><span class="line">	public boolean Login(String username, String password , boolean b) throws Exception &#123;</span><br><span class="line">		if (b) &#123;</span><br><span class="line">			conn &#x3D; getConnection();</span><br><span class="line">			sql &#x3D; &quot;select * from user where username &#x3D; ? and password &#x3D; ?&quot;;</span><br><span class="line">			pstmt &#x3D; conn.prepareCall(sql);</span><br><span class="line">			pstmt.setString(1,username);</span><br><span class="line">			pstmt.setString(2,password);</span><br><span class="line">			rs &#x3D; pstmt.executeQuery();</span><br><span class="line">			if(rs.next()) &#123;				&#x2F;&#x2F;证明用户名和密码正确，直接返回true 登录成功</span><br><span class="line">				return true;</span><br><span class="line">			&#125; </span><br><span class="line">		&#125; else &#123;</span><br><span class="line">			return false;</span><br><span class="line">		&#125;	</span><br><span class="line">		return false;</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>JavaWeb</tag>
        <tag>Login</tag>
        <tag>register</tag>
      </tags>
  </entry>
  <entry>
    <title>c语言笔记</title>
    <url>/2020/12/10/c%E8%AF%AD%E8%A8%80%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h3 id="1数据类型"><a href="#1数据类型" class="headerlink" title="1数据类型"></a>1数据类型</h3><table>
<thead>
<tr>
<th align="center">类型</th>
<th align="center">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="center">char</td>
<td align="center">1个字节</td>
</tr>
<tr>
<td align="center">short</td>
<td align="center">2个字节</td>
</tr>
<tr>
<td align="center">int</td>
<td align="center">4个字节</td>
</tr>
<tr>
<td align="center">float</td>
<td align="center">4个字节</td>
</tr>
<tr>
<td align="center">long</td>
<td align="center">4个字节</td>
</tr>
<tr>
<td align="center">double</td>
<td align="center">8个字节</td>
</tr>
<tr>
<td align="center">signed</td>
<td align="center">int   2^32 -1(标识符+)</td>
</tr>
<tr>
<td align="center">unsigned</td>
<td align="center">int  2^31 -2^31 -1(标识符-)</td>
</tr>
</tbody></table>
<h3 id="2输出"><a href="#2输出" class="headerlink" title="2输出"></a>2输出</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,<span class="number">12</span>); <span class="comment">// %d 格式化输出符，转义字符 ， 以 十进制形式 输出 12</span></span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">" %d 天 %d 小时"</span>,<span class="number">1</span>,<span class="number">24</span>); <span class="comment">//顺序填充	</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%x"</span>,<span class="number">12</span>);  <span class="comment">//以十六进制输出</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%o"</span>,<span class="number">12</span>); <span class="comment">//以八进制输出</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d %x %o \n"</span>,<span class="number">12</span>,<span class="number">12</span>,<span class="number">12</span>); <span class="comment">//分别以十进制，十六进制，八进制输出 12 c 14 </span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%X"</span>,<span class="number">12</span>); <span class="comment">// 十六进制输出大写 C</span></span><br><span class="line"></span><br><span class="line">-------</span><br><span class="line">   <span class="number">0xccccccccccc</span>  表示变量未定义</span><br></pre></td></tr></table></figure>



<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//sizeof（）获取数据类型的长度，单位为 byte</span></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">"int = %d \n"</span>,<span class="keyword">sizeof</span>(<span class="keyword">int</span>));		</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">"char = %d \n"</span>,<span class="keyword">sizeof</span>(<span class="keyword">char</span>));</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">"short = %d \n"</span>,<span class="keyword">sizeof</span>(short));</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">"long = %d \n"</span>,<span class="keyword">sizeof</span>(<span class="keyword">long</span>));</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">"float = %d \n"</span>,<span class="keyword">sizeof</span>(<span class="keyword">float</span>));</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">"double = %d \n"</span>,<span class="keyword">sizeof</span>(<span class="keyword">double</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">//结果：</span></span><br><span class="line"><span class="keyword">int</span> = <span class="number">4</span> </span><br><span class="line"><span class="keyword">char</span> = <span class="number">1</span> </span><br><span class="line">short = <span class="number">2</span> </span><br><span class="line"><span class="keyword">long</span> = <span class="number">8</span> </span><br><span class="line"><span class="keyword">float</span> = <span class="number">4</span> </span><br><span class="line"><span class="keyword">double</span> = <span class="number">8</span></span><br></pre></td></tr></table></figure>



<h3 id="3输入"><a href="#3输入" class="headerlink" title="3输入"></a>3输入</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//输入</span></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">"请输入班级人数"</span>);</span><br><span class="line">   <span class="keyword">int</span> num;</span><br><span class="line">   <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;num);   <span class="comment">// &amp; 取地址值，取 变懒num的地址值</span></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">"班级人数为： %d \n"</span>,num);</span><br></pre></td></tr></table></figure>





<h3 id="4for循环"><a href="#4for循环" class="headerlink" title="4for循环"></a>4for循环</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//for循环</span></span><br><span class="line"><span class="keyword">int</span> time;</span><br><span class="line"><span class="keyword">for</span> (time = <span class="number">60</span>; time &gt;<span class="number">0</span>; time--) &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"剩余时间 ： %d \n"</span> ,time);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<h3 id="5指针"><a href="#5指针" class="headerlink" title="5指针"></a>5指针</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;定义指针  ，单纯定义指针而未赋值称为野指针</span><br><span class="line">&#x2F;&#x2F;变量类型 * 变量名</span><br><span class="line">&#x2F;&#x2F;指针表示地址值</span><br><span class="line">&#x2F;&#x2F;表示一个存储int类型的内存空间</span><br><span class="line">int * p;</span><br><span class="line">&#x2F;&#x2F;在内存空间开辟一块空间用于存储int类型的数据</span><br><span class="line">int i;</span><br><span class="line">&#x2F;&#x2F;在这块内存空间里存储数据5</span><br><span class="line">i &#x3D; 5;</span><br><span class="line">&#x2F;&#x2F;给指针变量赋值</span><br><span class="line">p &#x3D; &amp;i;</span><br><span class="line">printf(&quot;i &#x3D; %#x \n&quot;,&amp;i);</span><br><span class="line">printf(&quot;int * p &#x3D; %#x \n&quot;,p);</span><br><span class="line"></span><br><span class="line"> &#x2F;&#x2F;取出指针指向这块内存地址空间的值</span><br><span class="line">printf(&quot;i &#x3D; %d \n&quot;,i);</span><br><span class="line">&#x2F;&#x2F;在指针变量前加 *</span><br><span class="line">printf(&quot;p &#x3D; %d \n&quot;,*p);</span><br></pre></td></tr></table></figure>



<h3 id="6指针赋值"><a href="#6指针赋值" class="headerlink" title="6指针赋值"></a>6指针赋值</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//定义指针</span></span><br><span class="line">  <span class="keyword">int</span> i = <span class="number">5</span>;</span><br><span class="line">  <span class="keyword">char</span> * c = &amp;i;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"*c 的值 %d\n"</span>,*c);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br></pre></td></tr></table></figure>



<h3 id="7值传递"><a href="#7值传递" class="headerlink" title="7值传递"></a>7值传递</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//定义交换函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">swap</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> temp;</span><br><span class="line">    temp = a;</span><br><span class="line">    a = b;</span><br><span class="line">    b = temp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123; </span><br><span class="line">    <span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">int</span> b = <span class="number">22</span>;</span><br><span class="line">    <span class="comment">//调用函数</span></span><br><span class="line">    swap(a, b);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"a的值： %d\n"</span>,a);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"b的值：%d\n"</span>,b);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//结果 仍是 a = 10 ; b = 22;</span></span><br><span class="line"><span class="comment">//原因，方法入栈执行完毕后，直接弹出栈，未改变原存储空间的存储的数值</span></span><br></pre></td></tr></table></figure>





<h3 id="8引用传递"><a href="#8引用传递" class="headerlink" title="8引用传递"></a>8引用传递</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//定义交换函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">swap</span><span class="params">(<span class="keyword">int</span> * a,<span class="keyword">int</span> * b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> temp;</span><br><span class="line">    temp = *a;</span><br><span class="line">    *a = *b;</span><br><span class="line">    *b = temp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">int</span> b = <span class="number">22</span>;</span><br><span class="line">    <span class="comment">//调用函数</span></span><br><span class="line">    swap(&amp;a, &amp;b);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"a的值： %d\n"</span>,a);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"b的值：%d\n"</span>,b);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;    </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//结果 a = 22; b =  10;</span></span><br></pre></td></tr></table></figure>





<h3 id="9引用指针返回一个以上的数值"><a href="#9引用指针返回一个以上的数值" class="headerlink" title="9引用指针返回一个以上的数值"></a>9引用指针返回一个以上的数值</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="comment">//定义函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> * a, <span class="keyword">int</span> * b )</span> </span>&#123;</span><br><span class="line">	*a +=<span class="number">10</span>;</span><br><span class="line">  *b +=<span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">int</span> a = <span class="number">123</span>;</span><br><span class="line">  <span class="keyword">int</span> b = <span class="number">22</span>;</span><br><span class="line">	<span class="comment">//调用函数</span></span><br><span class="line">	add(&amp;a,&amp;b);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%d , %d \n"</span>,a,b);</span><br><span class="line">  <span class="comment">//结果 133，32</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="10多级指针"><a href="#10多级指针" class="headerlink" title="10多级指针"></a>10多级指针</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">int</span> i = <span class="number">10</span>;</span><br><span class="line">  <span class="comment">//一级指针</span></span><br><span class="line">  <span class="keyword">int</span> *p = &amp;i;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"p = %d \n"</span>,*p);		<span class="comment">//p =10</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">//二级指针</span></span><br><span class="line">	<span class="keyword">int</span> ** pi = &amp;p;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"pi = %d \n"</span>,**p);	<span class="comment">//pi =10</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">//三级指针</span></span><br><span class="line">  <span class="keyword">int</span> ***pp = &amp;pi;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"pp = %d \n"</span>,***pp); <span class="comment">// pp =10</span></span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="11指针长度"><a href="#11指针长度" class="headerlink" title="11指针长度"></a>11指针长度</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="number">32</span> 位系统 <span class="number">4</span>位</span><br><span class="line"><span class="number">64</span> 位系统 <span class="number">8</span>位</span><br></pre></td></tr></table></figure>





<p>11数组</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">char</span> c [] = &#123;<span class="string">'H'</span>,<span class="string">'E'</span>,<span class="string">'L'</span>,<span class="string">'L'</span>,<span class="string">'O'</span>&#125;;</span><br><span class="line">	<span class="keyword">int</span> i;</span><br><span class="line">  <span class="comment">//sizeof();获取xxx长度</span></span><br><span class="line">  <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; <span class="keyword">sizeof</span>(c);i++)&#123;</span><br><span class="line">    <span class="comment">//printf("c[%d] = %c \n",i,c[i]);</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%c"</span>,c[i]);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">//用字符指针表示字符串</span></span><br><span class="line">  <span class="keyword">char</span> * c2 = <span class="string">"WORLD!"</span>;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">" %s \n"</span>,c2);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//result:	HELLO WORLD!</span></span><br></pre></td></tr></table></figure>





<h3 id="12-数组特点"><a href="#12-数组特点" class="headerlink" title="12 数组特点"></a>12 数组特点</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">include &lt;stdio.h&gt;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span>&#123;</span><br><span class="line">  <span class="keyword">char</span> c [] = &#123;<span class="string">'H'</span>,<span class="string">'E'</span>,<span class="string">'L'</span>,<span class="string">'L'</span>,<span class="string">'O'</span>&#125;;</span><br><span class="line">  <span class="comment">//1.数组的名字既是内存地址</span></span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"c = %#x \n"</span>,c);			<span class="comment">//  c = 0xefbff5d7 </span></span><br><span class="line">  <span class="comment">//2.数组的第一个元素就是数组的内存地址值</span></span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"c[0] = %#x \n"</span>,&amp;c[<span class="number">0</span>]); <span class="comment">// c[0] = 0xefbff5d7 </span></span><br><span class="line">  <span class="comment">//3.数组里的元素在内存中是一块连续的内存空间</span></span><br><span class="line">  <span class="keyword">int</span> i;</span><br><span class="line">  <span class="keyword">for</span>(i = <span class="number">0</span> ; i &lt; <span class="keyword">sizeof</span>(c);i++)&#123;</span><br><span class="line">     <span class="built_in">printf</span>(<span class="string">"c[%d] = %#x \n"</span>,i,&amp;c[i]);</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    	result</span></span><br><span class="line"><span class="comment">    	c[0] = 0xefbff5d7 </span></span><br><span class="line"><span class="comment">			c[1] = 0xefbff5d8 </span></span><br><span class="line"><span class="comment">			c[2] = 0xefbff5d9 </span></span><br><span class="line"><span class="comment">			c[3] = 0xefbff5da </span></span><br><span class="line"><span class="comment">			c[4] = 0xefbff5db </span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<h3 id="13数组的加法"><a href="#13数组的加法" class="headerlink" title="13数组的加法"></a>13数组的加法</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line"><span class="comment">// 		char arr [] = &#123;'H','E','L','L','O'&#125;;</span></span><br><span class="line"><span class="comment">//    char * p = &amp;arr;</span></span><br><span class="line"><span class="comment">//    printf("%c \n",*p);</span></span><br><span class="line"><span class="comment">//    printf("%c \n",*(p+1));</span></span><br><span class="line"><span class="comment">//    printf("%c \n",(*p+2));</span></span><br><span class="line"><span class="comment">//    printf("%c \n",*(p+3));</span></span><br><span class="line"><span class="comment">//    printf("%c \n",*(p+4));</span></span><br><span class="line">  </span><br><span class="line">  <span class="keyword">int</span> arr [] = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br><span class="line">  <span class="keyword">int</span> * pi = &amp;arr;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%d \n"</span>,*(p+<span class="number">0</span>));</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%d \n"</span>,*(p+<span class="number">1</span>));</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%d \n"</span>,*(p+<span class="number">2</span>));</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%d \n"</span>,*(p+<span class="number">3</span>));</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%d \n"</span>,*(p+<span class="number">4</span>));</span><br><span class="line">  <span class="comment">//指针所指向的内存地址向后偏移一个单位</span></span><br><span class="line">  <span class="comment">//一个单位的长度，取决于数组所存储的数据类型的长度</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="14-内存-4-G结构"><a href="#14-内存-4-G结构" class="headerlink" title="14 内存 4 G结构"></a>14 内存 4 G结构</h3><p>![image-20201117195537534](/Users/mac/Library/Application Support/typora-user-images/image-20201117195537534.png)</p>
<img src="/Users/mac/Library/Application Support/typora-user-images/image-20201117195713454.png" alt="image-20201117195713454" style="zoom:50%;" />



<p><strong><em>栈内存()效率比堆内存效率高</em></strong></p>
<hr>
<h5 id="栈内存："><a href="#栈内存：" class="headerlink" title="栈内存："></a>栈内存：</h5><pre><code>* 栈上分配的内存：静态内存
* 自动申请，自动释放
* 大小固定，内存空间连续</code></pre><h5 id="堆内存："><a href="#堆内存：" class="headerlink" title="堆内存："></a>堆内存：</h5><ul>
<li><p>程序员手动申请</p>
</li>
<li><p>大小取决于虚拟内存的大小，内存空间不连续</p>
</li>
<li><p>java自动回收，C中需手动使用 free()释放</p>
</li>
<li><p>堆分配的内存：动态内存 </p>
</li>
</ul>
<p><strong>C语言中 malloc() 【申请内存函数，单位字节】，free() 【释放内存】</strong></p>
<h1 id="15结构体"><a href="#15结构体" class="headerlink" title="15结构体"></a>15结构体</h1><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">study</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"好好学习，天天向上\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//结构体 ，相当于java中的类</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">    <span class="keyword">char</span> sex;</span><br><span class="line">    <span class="comment">//结构体中不允许定义方法</span></span><br><span class="line">    <span class="comment">//结构体只允许写函数的指针</span></span><br><span class="line">    <span class="keyword">void</span> (*study)();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//初始化结构体</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">student</span> <span class="title">stu</span> = &#123;</span><span class="number">15</span>,<span class="string">'M'</span>,study&#125;;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"stu %d \n"</span>,stu.age);</span><br><span class="line">    <span class="comment">//结构体长度</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"stu : %d\n"</span>,<span class="keyword">sizeof</span>(stu));</span><br><span class="line">    <span class="comment">//调用结构体方法</span></span><br><span class="line">    stu.study();</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//结构体指针</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">student</span> * <span class="title">p</span>;</span></span><br><span class="line">    p = &amp;stu;</span><br><span class="line">    p-&gt;study();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h1 id="16联合体"><a href="#16联合体" class="headerlink" title="16联合体"></a>16联合体</h1><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span>&#123;</span><br><span class="line">    <span class="keyword">union</span> &#123;<span class="keyword">int</span> i; <span class="keyword">char</span> c; short s&#125; un;</span><br><span class="line">    un.i = <span class="number">10l</span>;</span><br><span class="line">    un.s = <span class="number">20</span>;</span><br><span class="line">    <span class="comment">//同一时间只有一个变量，最后赋值的。</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d \n"</span>,un.i);</span><br><span class="line">    <span class="comment">//result 20</span></span><br><span class="line">    <span class="comment">//长度，联合体中最大的数据类型的长度</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d \n"</span>,<span class="keyword">sizeof</span>(un));</span><br><span class="line">    <span class="comment">//result 4</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h1 id="17枚举"><a href="#17枚举" class="headerlink" title="17枚举"></a>17枚举</h1><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">enum</span> WeekDay &#123;</span><br><span class="line">    Monday,Tuesday,Wednesday,Thursday,Friday,Saturday,Sunday</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//枚举，规定变量范围只能从预先定好的值中选取</span></span><br><span class="line">    <span class="keyword">enum</span> WeekDay day = Monday;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d \n"</span>,day);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h1 id="18自定义类型"><a href="#18自定义类型" class="headerlink" title="18自定义类型"></a>18自定义类型</h1><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> num;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    num i = <span class="number">11</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"i = %d \n"</span>,i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>C</category>
      </categories>
      <tags>
        <tag>笔记</tag>
      </tags>
  </entry>
</search>
