<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Mac软件无法打开或已损坏情况</title>
    <url>/2020/05/23/Mac%E8%BD%AF%E4%BB%B6%E6%97%A0%E6%B3%95%E6%89%93%E5%BC%80%E6%88%96%E5%B7%B2%E6%8D%9F%E5%9D%8F%E6%83%85%E5%86%B5/</url>
    <content><![CDATA[<h1 id="关于Mac软件无法启动的解决办法"><a href="#关于Mac软件无法启动的解决办法" class="headerlink" title="关于Mac软件无法启动的解决办法"></a>关于Mac软件无法启动的解决办法</h1><p>出现已损坏无法打开解决办法：</p>
<a id="more"></a>
<ul>
<li><p>请在系统偏好设置-安全性与隐私-选择【任何来源】，即可使用。<br>若无该选项：<br><em>运行终端，输入以下命令，回车输入密码</em> </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo spctl --master-disable</span><br></pre></td></tr></table></figure>

<p><em>打开安全性与隐私，任何来源已显示</em></p>
</li>
</ul>
<hr>
<ul>
<li>若运行软件显示“打不开或者显示应用已损坏的情况”</li>
<li>运行终端，输入以下命令，回车输入密码即可*</li>
</ul>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo xattr -d com.apple.quarantine &#x2F;Applications&#x2F;xxxx.app</span><br></pre></td></tr></table></figure>
<p>其中 <del>xxxx.app</del> 指该应用的具体名称</p>
<hr>
]]></content>
      <categories>
        <category>MacOS</category>
      </categories>
      <tags>
        <tag>MacOs</tag>
      </tags>
  </entry>
  <entry>
    <title>重装windows系统</title>
    <url>/2020/05/23/%E9%87%8D%E8%A3%85windows%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<h1 id="电脑重装系统"><a href="#电脑重装系统" class="headerlink" title="电脑重装系统"></a>电脑重装系统</h1><blockquote>
<p>献给我部门的师弟师妹们。</p>
</blockquote>
<a id="more"></a>
<h1 id="第一步：制作优盘启动"><a href="#第一步：制作优盘启动" class="headerlink" title="第一步：制作优盘启动"></a>第一步：制作优盘启动</h1><ul>
<li>准备好一个8GB的优盘，请事先备份好数据，因为制作优盘启动器会格式化优盘</li>
</ul>
<ul>
<li><p>下载制作优盘工具，这里我以<a href="http://www.wepe.com.cn/download.html" target="_blank" rel="noopener">微PE工具箱</a>为例。</p>
<ul>
<li><p>下载安装完毕后打开，并插入优盘。如图所示，选择安装至优盘&gt;默认安装就行<img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gf2myd41xfj30v30jlmyn.jpg" alt="微PE"> </p>
</li>
<li><p>在安装的同时，我们可以去下载windows镜像文件。推荐去，<a href="https://msdn.itellyou.cn/" target="_blank" rel="noopener">MSDN</a>下载。如图所示：<img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gf2mz3gibnj31c00u04qp.jpg" alt="MSDN"><br>我们选择【操作系统】&gt;【windows10,1903版本】&gt;【consumer editions】 这里我们选择consumer_editions版本，两个版本其实<a href="https://blog.csdn.net/qq_36707431/article/details/104787417" target="_blank" rel="noopener">区别不大</a>。</p>
<ul>
<li>下载完毕后，我们来打开电脑，发现会多了两个分区，其中一个为【EFI】分区，我们不管它。找另一个分区，在里面新建文件夹取名为”windows10”，将刚下载好的windows10 1903镜像拷贝到该路径。这样一个优盘启动工具制作完成。</li>
</ul>
</li>
</ul>
</li>
</ul>
<hr>
<h1 id="第二步：设置优盘启动"><a href="#第二步：设置优盘启动" class="headerlink" title="第二步：设置优盘启动"></a>第二步：设置优盘启动</h1><ul>
<li>以宏碁电脑为例，关机状态下插入优盘，开机并按【F2】进入<a href="https://www.jianshu.com/p/95c9d5dc8443" target="_blank" rel="noopener">BIOS系统</a>，方向键移动到【Boot】选项，将硬盘启动顺序为优盘启动。按【F10】保存并退出。重启后就进入微PE系统了。</li>
</ul>
<hr>
<h1 id="第三步：安装系统"><a href="#第三步：安装系统" class="headerlink" title="第三步：安装系统"></a>第三步：安装系统</h1><ul>
<li>进入系统后，打开【此电脑】&gt;【优盘启动器】&gt;【windows10】&gt;【双击镜像文件】&gt;【setup.exe】</li>
<li>打开【setup.exe】后，按提示进入安装程序。选择【windows10专业版】&gt; 【自定义安装】&gt;【系统盘】&gt;【格式化】&gt;【下一步】&gt;【走安装进度】&gt;【安装完成】</li>
<li>漫长的安装指引。</li>
</ul>
<hr>
<h1 id="第四步：激活系统"><a href="#第四步：激活系统" class="headerlink" title="第四步：激活系统"></a>第四步：激活系统</h1><ul>
<li>用数字激活软件，联网激活。</li>
</ul>
]]></content>
      <categories>
        <category>win</category>
      </categories>
      <tags>
        <tag>system</tag>
        <tag>win</tag>
        <tag>优盘启动</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaServlet登录与注册功能</title>
    <url>/2020/06/13/JavaServlet%E7%99%BB%E5%BD%95%E4%B8%8E%E6%B3%A8%E5%86%8C%E5%8A%9F%E8%83%BD/</url>
    <content><![CDATA[<h1 id="JavaServlet-实现登录与注册功能"><a href="#JavaServlet-实现登录与注册功能" class="headerlink" title="JavaServlet 实现登录与注册功能"></a>JavaServlet 实现登录与注册功能</h1><blockquote>
<p>采用servlet、jsp、mysql完成</p>
</blockquote>
<a id="more"></a>





<h1 id="先来看看实现效果："><a href="#先来看看实现效果：" class="headerlink" title="先来看看实现效果："></a>先来看看实现效果：</h1><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gfqlskxb4tj31c00u0nlm.jpg" alt="用户注册"></p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gfqlsrsxf0j31c00u0ayo.jpg" alt="注册失败"></p>
<h1 id="LoginServlet-java"><a href="#LoginServlet-java" class="headerlink" title="LoginServlet.java"></a>LoginServlet.java</h1> <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * LoginServlet:处理登录流程</span><br><span class="line"> * @author mac</span><br><span class="line"> *</span><br><span class="line"> *&#x2F;</span><br><span class="line"></span><br><span class="line">public class LoginServlet extends HttpServlet &#123;</span><br><span class="line">	private static final long serialVersionUID &#x3D; 1L;</span><br><span class="line">	</span><br><span class="line">	UserDaoImplement user &#x3D; new UserDaoImplement();</span><br><span class="line">	&#x2F;**</span><br><span class="line">	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)</span><br><span class="line">	 *&#x2F;</span><br><span class="line">	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;&#125;</span><br><span class="line"></span><br><span class="line">	&#x2F;**</span><br><span class="line">	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)</span><br><span class="line">	 *&#x2F;</span><br><span class="line">	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;</span><br><span class="line">		response.setContentType(&quot;text&#x2F;html; charset&#x3D;UTF-8&quot;);</span><br><span class="line">		PrintWriter out &#x3D; response.getWriter();</span><br><span class="line">		UserBean userbean &#x3D; null;</span><br><span class="line">		&#x2F;**</span><br><span class="line">		 * 获取用户输入的用户名，密码，验证码，及session域中的piccode值</span><br><span class="line">		 *&#x2F;</span><br><span class="line">		HttpSession session &#x3D; request.getSession();</span><br><span class="line">		String username &#x3D; request.getParameter(&quot;username&quot;);</span><br><span class="line">		String password &#x3D; request.getParameter(&quot;password&quot;);</span><br><span class="line">		String checkCode &#x3D; request.getParameter(&quot;checkCode&quot;);</span><br><span class="line">		String piccode &#x3D; (String)session.getAttribute(&quot;piccode&quot;);</span><br><span class="line">		password &#x3D; DigestUtil.md5Hex(password);		&#x2F;&#x2F;md5加密</span><br><span class="line">		&#x2F;&#x2F;判断验证码是否正确</span><br><span class="line">		boolean b &#x3D; CheckCode(piccode,checkCode);</span><br><span class="line">		</span><br><span class="line">		&#x2F;&#x2F;验证登录</span><br><span class="line">		try &#123;</span><br><span class="line">			boolean cl &#x3D; user.Login(username, password, b);</span><br><span class="line">			if(cl) &#123;</span><br><span class="line">				userbean &#x3D; new UserBean(username, password);</span><br><span class="line">				session.setAttribute(&quot;userbean&quot;, userbean);&#x2F;&#x2F;将对象保留在session中，便于后续的使用</span><br><span class="line">&#x2F;&#x2F;				out.print(&quot;&lt;script language&#x3D;&#39;javascript&#39;&gt;alert(&#39;登录成功！&#39;);&lt;&#x2F;script&gt;&quot;);</span><br><span class="line">				request.getRequestDispatcher(&quot;jsp&#x2F;index.jsp&quot;).forward(request, response);</span><br><span class="line">				</span><br><span class="line">			&#125; else &#123;</span><br><span class="line">				out.print(&quot;&lt;script language&#x3D;&#39;javascript&#39;&gt;alert(&#39;用户名或密码有误！&#39;);window.location.href&#x3D;&#39;jsp&#x2F;login.jsp&#39;&lt;&#x2F;script&gt;&quot;);</span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line">		&#125; catch (Exception e) &#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">		out.flush();&#x2F;&#x2F;将流刷新</span><br><span class="line">        out.close();&#x2F;&#x2F;将流关闭</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	&#x2F;**</span><br><span class="line">	 * 验证码的判断</span><br><span class="line">	 * piccode ： 为ImageServlet存入session域中的值</span><br><span class="line">	 * checkCode ： 为用户输入的值</span><br><span class="line">	 * @param piccode</span><br><span class="line">	 * @param checkCode</span><br><span class="line">	 * @return</span><br><span class="line">	 *&#x2F;</span><br><span class="line">	</span><br><span class="line">	public static boolean CheckCode(String piccode, String checkCode) &#123;</span><br><span class="line">		checkCode &#x3D; checkCode.toUpperCase();  &#x2F;&#x2F;将输入的验证码全部转为大写</span><br><span class="line">		</span><br><span class="line">		if(piccode.equals(checkCode)) &#123;</span><br><span class="line">			return true;    &#x2F;&#x2F;输入的验证码与随机生成的验证码一直</span><br><span class="line">		&#125; else &#123;</span><br><span class="line">			return false;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="RegisterServlet-java"><a href="#RegisterServlet-java" class="headerlink" title="RegisterServlet.java"></a>RegisterServlet.java</h1> <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * Servlet implementation class RegisterServlet</span><br><span class="line"> *&#x2F;</span><br><span class="line">public class RegisterServlet extends HttpServlet &#123;</span><br><span class="line">	private static final long serialVersionUID &#x3D; 1L;</span><br><span class="line">	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;&#125;</span><br><span class="line"></span><br><span class="line">	&#x2F;**</span><br><span class="line">	 * 接受前端返回的数据</span><br><span class="line">	 *&#x2F;</span><br><span class="line">	</span><br><span class="line">	UserDaoImplement user &#x3D; new UserDaoImplement();</span><br><span class="line">	</span><br><span class="line">	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;</span><br><span class="line">		response.setContentType(&quot;text&#x2F;html; charset&#x3D;UTF-8&quot;);</span><br><span class="line">		PrintWriter out &#x3D; response.getWriter();</span><br><span class="line">		HttpSession session &#x3D; request.getSession();</span><br><span class="line">		String username &#x3D; request.getParameter(&quot;username&quot;);</span><br><span class="line">		String password &#x3D; request.getParameter(&quot;password&quot;);</span><br><span class="line">		String checkCode &#x3D; request.getParameter(&quot;checkCode&quot;);</span><br><span class="line">		String piccode &#x3D; (String)session.getAttribute(&quot;piccode&quot;);</span><br><span class="line">		password &#x3D; DigestUtil.md5Hex(password);	&#x2F;&#x2F;md5加密</span><br><span class="line">		&#x2F;&#x2F;判断验证码是否正确</span><br><span class="line">		boolean b &#x3D; CheckCode(piccode,checkCode);</span><br><span class="line">		if( username &#x3D;&#x3D; null  || password &#x3D;&#x3D; null || &quot;&quot;.equals(username) || &quot;&quot;.equals(password)) &#123;	</span><br><span class="line">			out.print(&quot;&lt;script language&#x3D;&#39;javascript&#39;&gt;alert(&#39;请输入用户名和密码！&#39;);window.location.href&#x3D;&#39;jsp&#x2F;register.jsp&#39;&lt;&#x2F;script&gt;&quot;);</span><br><span class="line">			</span><br><span class="line">		&#125;	else &#123;</span><br><span class="line">			try &#123;</span><br><span class="line">				boolean ir &#x3D; user.Resgister(username, password,b);	&#x2F;&#x2F;成功返回true</span><br><span class="line">				if(ir) &#123;</span><br><span class="line">					</span><br><span class="line">					out.print(&quot;&lt;script language&#x3D;&#39;javascript&#39;&gt;alert(&#39;注册成功！&#39;);window.location.href&#x3D;&#39;jsp&#x2F;login.jsp&#39;&lt;&#x2F;script&gt;&quot;);</span><br><span class="line">				&#125; else &#123;</span><br><span class="line">					out.print(&quot;&lt;script language&#x3D;&#39;javascript&#39;&gt;alert(&#39;用户名被占用！&#39;);window.location.href&#x3D;&#39;jsp&#x2F;register.jsp&#39;&lt;&#x2F;script&gt;&quot;);</span><br><span class="line">				&#125;</span><br><span class="line">				</span><br><span class="line">			&#125; catch (Exception e) &#123;</span><br><span class="line">				</span><br><span class="line">				e.printStackTrace();</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		out.flush();&#x2F;&#x2F;将流刷新</span><br><span class="line">        out.close();&#x2F;&#x2F;将流关闭</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line"></span><br><span class="line">	&#x2F;**</span><br><span class="line">	 * 验证码的判断</span><br><span class="line">	 * piccode ： 为ImageServlet存入session域中的值</span><br><span class="line">	 * checkCode ： 为用户输入的值</span><br><span class="line">	 * @param piccode</span><br><span class="line">	 * @param checkCode</span><br><span class="line">	 * @return</span><br><span class="line">	 *&#x2F;</span><br><span class="line">	</span><br><span class="line">	public static boolean CheckCode(String piccode, String checkCode) &#123;</span><br><span class="line">		checkCode &#x3D; checkCode.toUpperCase();  &#x2F;&#x2F;将输入的验证码全部转为大写</span><br><span class="line">		</span><br><span class="line">		if(piccode.equals(checkCode)) &#123;</span><br><span class="line">			return true;    &#x2F;&#x2F;输入的验证码与随机生成的验证码一直</span><br><span class="line">		&#125; else &#123;</span><br><span class="line">			return false;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="Dao-类"><a href="#Dao-类" class="headerlink" title="Dao 类"></a>Dao 类</h1> <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">public interface Dao &#123;</span><br><span class="line">	</span><br><span class="line">	&#x2F;**</span><br><span class="line">	 * 获取数据源</span><br><span class="line">	 * @return ds</span><br><span class="line">	 *&#x2F;</span><br><span class="line">	public static DataSource getDataSource() &#123;</span><br><span class="line">		DataSource ds &#x3D; null;</span><br><span class="line">		try &#123;</span><br><span class="line">			Context context &#x3D; new InitialContext();</span><br><span class="line">			ds &#x3D; (DataSource) context.lookup(&quot;java:comp&#x2F;env&#x2F;jdbc&#x2F;datasource&quot;);</span><br><span class="line">			</span><br><span class="line">		&#125; catch (Exception e) &#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125; </span><br><span class="line">		return ds;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	</span><br><span class="line">	&#x2F;**</span><br><span class="line">	 * 获取数据库连接</span><br><span class="line">	 * @return conn</span><br><span class="line">	 *&#x2F;</span><br><span class="line">	public default Connection getConnection() &#123;</span><br><span class="line">		DataSource ds &#x3D; getDataSource();</span><br><span class="line">		Connection conn &#x3D; null;</span><br><span class="line">		try &#123;</span><br><span class="line">			conn &#x3D; ds.getConnection();</span><br><span class="line">		&#125; catch (Exception e) &#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">		return conn;</span><br><span class="line">	&#125;	</span><br><span class="line">	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="userDao"><a href="#userDao" class="headerlink" title="userDao"></a>userDao</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * 用户dao功能接口定义</span><br><span class="line"> * @author mac</span><br><span class="line"> *</span><br><span class="line"> *&#x2F;</span><br><span class="line">public interface UserDao extends Dao &#123;</span><br><span class="line">	&#x2F;&#x2F;判断数据是否含已有username</span><br><span class="line">	public boolean IsResgister(String username) throws Exception;</span><br><span class="line">	&#x2F;&#x2F;注册功能接口</span><br><span class="line">	public boolean Resgister(String username ,String password,boolean b) throws Exception;	</span><br><span class="line">	&#x2F;&#x2F;登录功能接口</span><br><span class="line">	public boolean Login(String username ,String password,boolean b) throws Exception;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="用户dao实现类"><a href="#用户dao实现类" class="headerlink" title="用户dao实现类"></a>用户dao实现类</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * 用户dao实现类</span><br><span class="line"> * @author mac</span><br><span class="line"> *</span><br><span class="line"> *&#x2F;</span><br><span class="line">public class UserDaoImplement implements UserDao&#123;	</span><br><span class="line">	</span><br><span class="line">	public Connection conn &#x3D; null;</span><br><span class="line">	public String sql &#x3D; null;</span><br><span class="line">	public PreparedStatement pstmt &#x3D; null;</span><br><span class="line">	public Statement stmt &#x3D; null;</span><br><span class="line">	ResultSet rs &#x3D; null;</span><br><span class="line">	</span><br><span class="line">	&#x2F;**</span><br><span class="line">	 * 实现注册功能</span><br><span class="line">	 * 成功返回 true</span><br><span class="line">	 * 失败返回 false</span><br><span class="line">	 *&#x2F;</span><br><span class="line">	@Override</span><br><span class="line">	public boolean Resgister(String username, String password,boolean b) throws Exception &#123;</span><br><span class="line">		if(b) &#123;</span><br><span class="line">			conn &#x3D; getConnection();</span><br><span class="line">			&#x2F;&#x2F;先判断数据库是否是存在要注册的用户名</span><br><span class="line">			boolean is &#x3D; IsResgister(username);</span><br><span class="line">			if(!is) &#123;</span><br><span class="line">				sql&#x3D;&quot;insert into user(username, password)values (?, ?)&quot;;  </span><br><span class="line">				pstmt&#x3D; conn.prepareStatement(sql);</span><br><span class="line">				pstmt.setString(1, username);</span><br><span class="line">				pstmt.setString(2, password);</span><br><span class="line">				if(pstmt.executeUpdate()&gt;&#x3D;1) &#123;			&#x2F;&#x2F;返回大于1 证明插入成功</span><br><span class="line">					return true;</span><br><span class="line">				&#125; else &#123;</span><br><span class="line">					return false;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125; else &#123;</span><br><span class="line">				return false;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		return false;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	&#x2F;**</span><br><span class="line">	 * 判断数据库中 是否包含传入的 username</span><br><span class="line">	 *&#x2F;</span><br><span class="line">	@Override</span><br><span class="line">	public boolean IsResgister(String username) throws Exception &#123;</span><br><span class="line">		conn &#x3D; getConnection();</span><br><span class="line">		sql &#x3D; &quot;select * from user where username &#x3D;?&quot;;</span><br><span class="line">		pstmt &#x3D; conn.prepareCall(sql);</span><br><span class="line">		pstmt.setString(1,username);</span><br><span class="line">		rs &#x3D; pstmt.executeQuery();</span><br><span class="line">		if(rs.next()) &#123;					&#x2F;&#x2F; 返回true 则证明数据库已存在记录</span><br><span class="line">			return true;</span><br><span class="line">		&#125; else &#123;</span><br><span class="line">			return false;</span><br><span class="line">		&#125;</span><br><span class="line">	</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	&#x2F;**</span><br><span class="line">	 * 实现登录功能</span><br><span class="line">	 * username:用户名</span><br><span class="line">	 * password:密码</span><br><span class="line">	 * b  :验证码的正确性</span><br><span class="line">	 * 成功返回 true</span><br><span class="line">	 * 失败返回 false</span><br><span class="line">	 *&#x2F;</span><br><span class="line">	</span><br><span class="line">	@Override</span><br><span class="line">	public boolean Login(String username, String password , boolean b) throws Exception &#123;</span><br><span class="line">		if (b) &#123;</span><br><span class="line">			conn &#x3D; getConnection();</span><br><span class="line">			sql &#x3D; &quot;select * from user where username &#x3D; ? and password &#x3D; ?&quot;;</span><br><span class="line">			pstmt &#x3D; conn.prepareCall(sql);</span><br><span class="line">			pstmt.setString(1,username);</span><br><span class="line">			pstmt.setString(2,password);</span><br><span class="line">			rs &#x3D; pstmt.executeQuery();</span><br><span class="line">			if(rs.next()) &#123;				&#x2F;&#x2F;证明用户名和密码正确，直接返回true 登录成功</span><br><span class="line">				return true;</span><br><span class="line">			&#125; </span><br><span class="line">		&#125; else &#123;</span><br><span class="line">			return false;</span><br><span class="line">		&#125;	</span><br><span class="line">		return false;</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>JavaWeb</tag>
        <tag>Login</tag>
        <tag>register</tag>
      </tags>
  </entry>
</search>
